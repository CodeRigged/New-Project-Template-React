$transition-time: 0.2s;

@mixin grid($template-columns, $template-rows, $justify, $align) {
  display: grid;
  grid-template-columns: $template-columns;
  grid-template-rows: $template-rows;
  justify-items: $justify;
  align-items: $align;
}
@mixin flex($flex-direction, $justify, $align) {
  display: flex;
  flex-direction: $flex-direction;
  justify-content: $justify;
  align-items: $align;
}
@mixin widthAndHeight($width, $height) {
  width: $width;
  height: $height;
}
@mixin paddingAndMargin($padding, $margin) {
  padding: $padding;
  margin: $margin;
}
@mixin widthEqualsHeight($size) {
  width: $size;
  height: $size;
}

@mixin text($font, $color) {
  font: $font;
  color: $color;
}

@mixin positioning($top, $right, $bottom, $left, $fixed: true) {
  @if ($fixed) {
    position: fixed;
  } @else {
    position: absolute;
  }
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}
@mixin hover-effect($height, $background-color) {
  a:before {
    content: "";
    position: absolute;
    width: 100%;
    height: $height;
    bottom: -$height;
    left: 0;
    background-color: $background-color;
    visibility: hidden;
    transform: scaleX(0);
    transition: all 0.3s ease-in-out;
  }
  a:hover:before {
    visibility: visible;
    transform: scaleX(1);
  }
}

@mixin button($size, $border-color) {
  @include widthEqualsHeight($size);
  @include flex(column, center, center);
  cursor: pointer;
  font-size: $size;
  border: 2.5px solid $border-color;
  border-radius: 50%;
}

@mixin icon-action($button-size, $button-color, $type) {
  @if ($type == "fill") {
    &:hover {
      box-shadow: inset 0 0 0 $button-size $button-color;
    }
  } @else if($type == "expand") {
    background-repeat: no-repeat;
    background-image: linear-gradient($button-color, $button-color);
    background-position: 50% 50%;
    background-size: 0% 0%;
    &:hover {
      background-size: 100% 100%;
    }
  }
  &:hover {
    color: $main-font-color;
    transition: $transition-time;
  }
}